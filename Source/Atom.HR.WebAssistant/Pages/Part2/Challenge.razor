@page "/challenges/{Id}/{ChallengeId}"
@using Syncfusion.Blazor.RichTextEditor
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Grids
@using Atom.HR.Models
@inject Atom.HR.WebAssistant.Areas.Storage.VacancyService VacancyService
@inject Microsoft.AspNetCore.Components.NavigationManager UriHelper

<div class="control-section">
    <SfChart Title="Рейтинг кандидатов">
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" Interval="1">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
            <ChartAxisMinorGridLines Width="0"></ChartAxisMinorGridLines>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
            <ChartAxisMinorTickLines Width="0"></ChartAxisMinorTickLines>
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis Title="Sales" Minimum="0" Maximum="500" Interval="100" LabelFormat="{value}B">
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
            <ChartAxisMajorGridLines Width="1"></ChartAxisMajorGridLines>
            <ChartAxisMinorGridLines Width="1"></ChartAxisMinorGridLines>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
            <ChartAxisMinorTickLines Width="0"></ChartAxisMinorTickLines>
        </ChartPrimaryYAxis>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@DataSource" XName="x" YName="y" Width="2" Name="UK" Type="ChartSeriesType.StackingColumn">
            </ChartSeries>
            <ChartSeries DataSource="@DataSource" XName="x" YName="y1" Width="2" Name="Germany" Type="ChartSeriesType.StackingColumn">
            </ChartSeries>
            <ChartSeries DataSource="@DataSource" XName="x" YName="y2" Width="2" Name="France" Type="ChartSeriesType.StackingColumn">
            </ChartSeries>
            <ChartSeries DataSource="@DataSource" XName="x" YName="y3" Width="2" Name="Italy" Type="ChartSeriesType.StackingColumn">
            </ChartSeries>
        </ChartSeriesCollection>
        <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
    </SfChart>
</div>
<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfGrid DataSource="@GridData" Height="359">
                <GridColumns>
                    <GridColumn HeaderText="Employee Image" Width="120">
                        <Template>
                            @{
                                var EmployeeInfo = (context as PersonProfile);
                                <div class="image">
                                    <img src="@UriHelper.ToAbsoluteUri($"images/data-grid/{EmployeeInfo.Id}.png")" alt="@EmployeeInfo.Id" />
                                </div>
                            }
                        </Template>
                    </GridColumn>
                    <GridColumn Field=@nameof(PersonProfile.Id) HeaderText="Employee ID" Width="120"></GridColumn>
                    <GridColumn Field=@nameof(PersonProfile.Name) HeaderText="Name" Width="120"></GridColumn>               
                    @for (var i = 0; i < GridData.Count; i++)
                    {
                        //<GridColumn Field=@nameof(PersonProfile.Challenges) HeaderText="Hire Date" Format="d" Type="ColumnType.Date" TextAlign="TextAlign.Right" Width="160"></GridColumn>
                    }

                </GridColumns>
            </SfGrid>
        </div>
    </div>
</div>



@code {

    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public string ChallengeId { get; set; }


    public class StackedColumnChartData
    {
        public string x { get; set; }
        public double y { get; set; }
        public double y1 { get; set; }
        public double y2 { get; set; }
        public double y3 { get; set; }
    }
    public List<StackedColumnChartData> DataSource = new List<StackedColumnChartData>
{
        new StackedColumnChartData { x= "2014", y= 111.1, y1= 76.9 , y2= 66.1 , y3= 34.1},
        new StackedColumnChartData { x= "2015", y= 127.3, y1= 99.5 , y2= 79.3 , y3= 38.2},
        new StackedColumnChartData { x= "2016", y= 143.4, y1= 121.7, y2= 91.3 , y3= 44.0},
        new StackedColumnChartData { x= "2017", y= 159.9, y1= 142.5, y2= 102.4, y3= 51.6}
    };

    public List<PersonProfile> GridData { get; set; }
    protected override void OnInitialized()
    {
        //GridData = Employee.GetAllRecords();
    }
}
