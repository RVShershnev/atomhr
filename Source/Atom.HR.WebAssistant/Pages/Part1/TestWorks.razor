@page "/testworks"

@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Spinner
@using Syncfusion.Blazor.DropDowns
@using System;
@using Atom.HR.Models;
@inject Microsoft.AspNetCore.Components.NavigationManager UriHelper
@inject Atom.HR.WebAssistant.Areas.TestWorks.TestWorkService TestWorkService
@inject Atom.HR.WebAssistant.Areas.Communications.MessageTemplatesService MessageTemplatesService

<div class="row">
    <SfButton IsPrimary="true" OnClick="CreateVacabcy">Создать тест</SfButton>
</div>
<div class="row">
    <SfSpinner @ref="SpinnerObj" Target="#container"></SfSpinner>
    <div id="container">
        <SfGrid DataSource="@GridData" AllowSelection="true" AllowSorting="true" AllowFiltering="true" EnableVirtualization="true" EnableHover="false" Height="600" RowHeight="38">
            <GridEvents OnRecordClick="RecordClick" TValue="TestWork"></GridEvents>
            <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
            <GridPageSettings PageSize="40"></GridPageSettings>
            <GridSelectionSettings CheckboxOnly="true" PersistSelection="true"></GridSelectionSettings>
            <GridColumns>
                <GridColumn Field=@nameof(TestWork.Id) HeaderText="Id" Visible="true" IsPrimaryKey="false" Width="130"></GridColumn>
                <GridColumn Field=@nameof(TestWork.Name) HeaderText="Полное имя" Visible="true" IsPrimaryKey="false" Width="130"></GridColumn>
                <GridColumn Field=@nameof(TestWork.Source) HeaderText="Источник" Visible="true" IsPrimaryKey="false" Width="130"></GridColumn>
                <GridColumn Field=@nameof(TestWork.Type) HeaderText="Тип" Visible="true" IsPrimaryKey="false" Width="130"></GridColumn>
            </GridColumns>
        </SfGrid>
    </div>
</div>


@code {
    public List<TestWork> GridData { get; set; } = new List<TestWork>();
    public int Value { get; set; } = 1000;
    SfSpinner SpinnerObj;
    string target { get; set; } = "#container";

    private int? index { get; set; } = 0;

    protected override async Task OnInitializedAsync()
    {
        GridData = await TestWorkService.GetAllTestWork();
    }

    public void CreateVacabcy()
    {
        UriHelper.NavigateTo($"testwork");
    }
    public void RecordClick(RecordClickEventArgs<TestWork> Args)
    {
        var prjectId = Args.RowData.Id;
        UriHelper.NavigateTo($"/testworks/{prjectId.Replace('/', '_')}");
    }
}

